<%
  data_key = []
  action_title = ''
  actions = []
  if props[:action].present?
    action_title = props[:action][:title] || ''
    actions = props[:action][:actions] || []
  end
%>
<table
id="<%=props[:id]%>"
class="table table-hover table-outline table-vcenter text-nowrap card-table"
data-config="<%=props[:config]%>">
  <thead>
  <%=
    content_tag :tr do
      props[:columns].reject{ |a| a[:title].casecmp('password').zero?}.each do |column|
        data_key << column[:data]
        concat content_tag(:th, column[:title])
      end
      concat content_tag(:th, action_title, { class: 'text-center' } ) unless action_title.blank?
    end
  %>
  </thead>
  <tbody>
  <% props[:data].each do |data| %>
    <%=
      content_tag :tr do
        data_key.each do |key|
          concat content_tag(:td, data[key])
        end
        if actions.any?
          concat(content_tag :td, { class: 'd-flex justify-content-center' } {
            action = ''
            if actions.include? :show
              action.concat link_to data, {class: 'pr-1'} {
                content_tag :i, '', class: 'fe fe-eye edit-icon'
              }
            end
            if actions.include? :update
              action.concat link_to send("edit_#{data.model_name.singular_route_key}_path",data), {class: 'pr-1'} {
                content_tag :i, '', class: 'fe fe-edit edit-icon'
              }
            end
            if actions.include? :delete
              action.concat link_to data, method: :delete, data: { confirm: '¿Estás seguro?' } {
                content_tag :i, '', class: 'fe fe-trash trash-icon'
              }
            end
            action.html_safe
          })
        end
      end
    %>
  <% end %>
  </tbody>
</table>
<%= javascript_tag defer: 'defer' do %>
  window.initializeTable('<%=props[:id]%>', JSON.parse('<%= props[:config].to_json.html_safe %>'));
<% end %>